# Saves the target kingdom to scope:target_kingdom, and the target character to scope:target_character
determine_ghw_target = {
	# Find every *possible* kingdom
	$FAITH$ = {
		save_temporary_scope_value_as = {
			name = faith_strength
			value = faith_military_strength
		}
	}


	every_kingdom = {
		limit = {
			valid_ghw_target_trigger = { FAITH = $FAITH$ }
		}
		add_to_list = potential_kingdoms
	}
	# Pick out the 3 "best" ones
	ordered_in_list = {
		list = potential_kingdoms
		order_by = great_holy_war_target_kingdom_weight
		
		min = 0
		max = 3
		check_range_bounds = no
		
		add_to_list = filtered_potential_kingdoms
	}
	# Pick one of the top 3 at random (weighted)
	random_in_list = {
		list = filtered_potential_kingdoms
		weight = {
			base = 0
			modifier = {
				add = great_holy_war_target_kingdom_weight
			}
		}
		save_scope_as = target_kingdom
	}
	random_log_scopes = yes
	# Find a random top liege in the area
	scope:target_kingdom = {
		random_in_de_jure_hierarchy = {
			continue = { tier > tier_county }
			limit = { #Try to pick the largest ruler in the area.
				tier = tier_county
				$FAITH$ = {
					is_hostile_enough_for_holy_war_trigger = { FAITH = prev.holder.faith }
				}
				holder = {
					highest_held_title_tier >= 4
					any_realm_county = { count >= 5 }
				}
			}
			alternative_limit = {
				tier = tier_county
				$FAITH$ = {
					is_hostile_enough_for_holy_war_trigger = { FAITH = prev.holder.faith }
				}
				holder = {
					highest_held_title_tier >= 3
					any_realm_county = { count >= 5 }
				}
			}
			alternative_limit = {
				tier = tier_county
				$FAITH$ = {
					is_hostile_enough_for_holy_war_trigger = { FAITH = prev.holder.faith }
				}
				holder = {
					highest_held_title_tier >= 2
					any_realm_county = { count >= 5 }
				}
			}
			alternative_limit = {
				tier = tier_county
				$FAITH$ = {
					is_hostile_enough_for_holy_war_trigger = { FAITH = prev.holder.faith }
				}
			}
			alternative_limit = {
				tier = tier_kingdom
				$FAITH$ = {
					is_hostile_enough_for_holy_war_trigger = { FAITH = prev.holder.faith }
				}
			}
			holder = {
				save_scope_as = target_character
			}
		}
	}
}